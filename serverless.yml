service: OctankLMS

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.8
  stage: ${self:custom.common.currentStage}
  environment:
    LOG_ENABLED: "True"
  apiGateway:
    apiKeys:
      - internal-endpoints-key

package:
  patterns:
    - "!node_modules/**"
    - "!layers/**"
    - layers/base.py
    - "!.vscode"
    - "!resources/**"
    - "!*.zip"
    - "!venv/**"
    - "!README.md"
    - "!requirements.txt"
    - "!python/**"
    - "!buildspec.yml"
    - "!__pychache__/**"

plugins:
  - serverless-iam-roles-per-function
  - serverless-python-requirements
  - serverless-associate-waf
 
custom:
  pythonRequirements:
    dockerizePip: true
  common:
    defaultStage: dev
    region: ${opt:region, 'us-east-1'}
    currentStage: ${opt:stage, self:custom.common.defaultStage}
  stage: ${self:custom.common.currentStage}
  tenantTable: ${self:custom.stage}-tenants-table
  associateWaf:
    name: ${self:custom.stage}-octank-api-waf

functions:
  - ${file(services/tenant_manager/create_tenant/function.yml)}
  - ${file(services/tenant_manager/get_tenant/function.yml)}
  - ${file(services/tenant_manager/get_tenants/function.yml)}
  - ${file(services/tenant_manager/update_tenant/function.yml)}
  - ${file(services/tenant_onboarding/function.yml)}
  - ${file(services/user_manager/create_user_group/function.yml)}
  - ${file(services/user_manager/create_user/function.yml)}
  - ${file(services/user_manager/get_users_group/function.yml)}
  - ${file(services/user_manager/get_tokens/function.yml)}
  - ${file(services/resource_manager/create_aurora_cluster/function.yml)}
  - ${file(services/resource_manager/post_aurora_creation/function.yml)}

resources:
  - ${file(resources/tenants-cognito-user-pool.yml)}
  - ${file(resources/tenants-dynamodb-table.yml)}
  - ${file(resources/rds-instance-created-event-suscription.yml)}
  - ${file(resources/rds-instance-created-sns-topic.yml)}